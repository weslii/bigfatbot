<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= business ? business.business_name : 'Add Business' %> - Novi</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/css/groups-dashboard.css">
</head>
<body>
    <header class="header">
        <div class="header-content">
            <div class="header-left">
                <a href="/dashboard" class="logo-section">
                    <div class="logo-icon"><i class="fas fa-building"></i></div>
                    <div class="logo-text"><span class="main-title"><%= business ? business.business_name : 'Add Business' %></span></div>
                </a>
            </div>
            <div class="header-right">
                <a href="/dashboard" class="nav-link">Dashboard</a>
                <a href="/orders" class="nav-link">Orders</a>
                <a href="/groups" class="nav-link">Groups</a>
                <button class="btn btn-icon" id="theme-toggle" aria-label="Toggle Theme">
                    <i class="fas fa-sun"></i><i class="fas fa-moon" style="display: none;"></i>
                </button>
                <div class="dropdown">
                    <button class="btn btn-icon" id="profileDropdown"><i class="fas fa-user"></i></button>
                    <div class="dropdown-content" id="profileMenu">
                        <a href="/settings" class="dropdown-item"><i class="fas fa-cog"></i> Settings</a>
                        <form action="/logout" method="post" class="dropdown-item" style="padding: 0; margin: 0;">
                            <button type="submit" style="all: unset; cursor: pointer; display: flex; align-items: center; gap: 0.5rem; padding: 0.75rem 1rem; width: 100%;"><i class="fas fa-sign-out-alt"></i> Logout</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <main class="main-content">
        <% if (business) { %>
            <!-- Page Header -->
            <div class="page-header scroll-reveal">
                <div>
                    <h1 class="page-title"><%= business.business_name %></h1>
                    <p class="page-subtitle">Manage your business details, groups, and orders</p>
                </div>
                <div class="header-actions-right">
                    <a href="/dashboard" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Dashboard
                    </a>
                </div>
            </div>

            <div class="business-page-layout">
                <!-- Business Information Side Card -->
                <div class="business-side-card scroll-reveal">
                    <div class="side-card-header">
                        <h3 class="side-card-title">
                            <i class="fas fa-info-circle"></i> Business Info
                        </h3>
                    </div>
                    <div class="side-card-content">
                        <div class="business-details-list">
                            <div class="detail-row">
                                <label class="detail-label">Business ID</label>
                                <div class="detail-value"><code><%= business.business_id %></code></div>
                            </div>
                            <div class="detail-row">
                                <label class="detail-label">Setup Code</label>
                                <div class="detail-value"><code><%= business.setup_identifier %></code></div>
                            </div>
                            <div class="detail-row">
                                <label class="detail-label">Created</label>
                                <div class="detail-value"><%= new Date(business.created_at).toLocaleDateString() %></div>
                            </div>
                            <div class="detail-row">
                                <label class="detail-label">Status</label>
                                <div class="detail-value">
                                    <span class="status-badge active">Active</span>
                                </div>
                            </div>
                            <div class="detail-row">
                                <label class="detail-label">WhatsApp Groups</label>
                                <div class="detail-value"><%= businessGroups.length %></div>
                            </div>
                        </div>
                        <div class="side-card-actions">
                            <button class="btn btn-sm btn-outline" onclick="editBusinessName()">
                                <i class="fas fa-edit"></i> Edit Name
                            </button>
                            <button class="btn btn-sm btn-danger" onclick="deleteBusiness()">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Main Content Area -->
                <div class="main-content-area">
                    <!-- KPI Cards -->
                    <div class="stats-grid">
                        <div class="stat-card orders scroll-reveal">
                            <div class="stat-header">
                                <span class="stat-title">Total Orders</span>
                                <div class="stat-icon">
                                    <i class="fas fa-box"></i>
                                </div>
                            </div>
                            <div class="stat-value"><%= businessStats.totalOrders %></div>
                        </div>
                        <div class="stat-card completed scroll-reveal">
                            <div class="stat-header">
                                <span class="stat-title">Completed Orders</span>
                                <div class="stat-icon">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                            </div>
                            <div class="stat-value"><%= businessStats.completedOrders %></div>
                        </div>
                        <div class="stat-card pending scroll-reveal">
                            <div class="stat-header">
                                <span class="stat-title">Pending Orders</span>
                                <div class="stat-icon">
                                    <i class="fas fa-hourglass-half"></i>
                                </div>
                            </div>
                            <div class="stat-value"><%= businessStats.pendingOrders %></div>
                        </div>
                    </div>

                    <!-- WhatsApp Groups -->
                    <div class="content-card scroll-reveal">
                        <div class="card-header">
                            <h3 class="card-title">
                                <i class="fas fa-comments"></i> WhatsApp Groups
                            </h3>
                            <button class="btn btn-primary" onclick="openAddGroupModal()">
                                <i class="fas fa-plus"></i> Add Group
                            </button>
                        </div>
                        <div class="card-content">
                            <% if (businessGroups && businessGroups.length > 0) { %>
                                <div class="table-container">
                                    <table class="data-table">
                                        <thead>
                                            <tr>
                                                <th>Group Name</th>
                                                <th>Type</th>
                                                <th>Status</th>
                                                <th>Created</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% businessGroups.forEach(group => { %>
                                                <tr>
                                                    <td>
                                                        <div class="group-info">
                                                            <div class="group-name"><%= group.group_name %></div>
                                                            <div class="group-id"><%= group.group_id %></div>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <span class="status-badge <%= group.group_type === 'sales' ? 'success' : 'info' %>">
                                                            <%= group.group_type.charAt(0).toUpperCase() + group.group_type.slice(1) %>
                                                        </span>
                                                    </td>
                                                    <td><span class="status-badge active">Active</span></td>
                                                    <td><%= new Date(group.created_at).toLocaleDateString() %></td>
                                                    <td>
                                                        <div class="btn-group">
                                                            <button class="btn btn-sm btn-outline" onclick="viewGroup('<%= group.id %>')">
                                                                <i class="fas fa-eye"></i>
                                                            </button>
                                                            <button class="btn btn-sm btn-outline" onclick="removeGroup('<%= group.id %>')">
                                                                <i class="fas fa-trash"></i>
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            <% }); %>
                                        </tbody>
                                    </table>
                                </div>
                            <% } else { %>
                                <div class="empty-state">
                                    <i class="fas fa-comments"></i>
                                    <h4>No WhatsApp Groups</h4>
                                    <p>You haven't added any WhatsApp groups yet. Add your first group to start receiving orders.</p>
                                    <button class="btn btn-primary" onclick="openAddGroupModal()">
                                        <i class="fas fa-plus"></i> Add Your First Group
                                    </button>
                                </div>
                            <% } %>
                        </div>
                    </div>

                    <!-- Recent Orders -->
                    <div class="content-card scroll-reveal">
                        <div class="card-header">
                            <h3 class="card-title">
                                <i class="fas fa-box"></i> Recent Orders
                            </h3>
                            <div class="header-actions-right">
                                <div class="dropdown">
                                    <button class="btn btn-secondary" id="exportDropdown">
                                        <i class="fas fa-download"></i> Export
                                    </button>
                                    <div class="dropdown-content" id="exportMenu">
                                        <a href="#" class="dropdown-item" onclick="exportBusinessOrders('csv')">
                                            <i class="fas fa-file-csv"></i> Export to CSV
                                        </a>
                                        <a href="#" class="dropdown-item" onclick="exportBusinessOrders('json')">
                                            <i class="fas fa-file-code"></i> Export to JSON
                                        </a>
                                        <a href="#" class="dropdown-item" onclick="exportBusinessOrders('pdf')">
                                            <i class="fas fa-file-pdf"></i> Export to PDF
                                        </a>
                                    </div>
                                </div>
                                <a href="/orders?business=<%= business.business_id %>" class="btn btn-primary">
                                    <i class="fas fa-external-link-alt"></i> View All Orders
                                </a>
                            </div>
                        </div>
                        <div class="card-content">
                            <% if (recentOrders && recentOrders.length > 0) { %>
                                <div class="table-container">
                                    <table class="data-table">
                                        <thead>
                                            <tr>
                                                <th>Order ID</th>
                                                <th>Customer</th>
                                                <th>Items</th>
                                                <th>Status</th>
                                                <th>Date</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% recentOrders.forEach(order => { %>
                                                <tr>
                                                    <td><strong><%= order.order_id %></strong></td>
                                                    <td><%= order.customer_name %></td>
                                                    <td>
                                                        <% 
                                                        let itemsDisplay = '';
                                                        if (order.items) {
                                                            try {
                                                                const items = typeof order.items === 'string' ? JSON.parse(order.items) : order.items;
                                                                if (Array.isArray(items)) {
                                                                    itemsDisplay = items.map(item => item.name || item).join(', ');
                                                                } else {
                                                                    itemsDisplay = order.items;
                                                                }
                                                            } catch (e) {
                                                                itemsDisplay = order.items;
                                                            }
                                                        }
                                                        %>
                                                        <%= itemsDisplay || 'No items' %>
                                                    </td>
                                                    <td>
                                                        <span class="status-badge <%= order.status %>">
                                                            <%= order.status.charAt(0).toUpperCase() + order.status.slice(1) %>
                                                        </span>
                                                    </td>
                                                    <td><%= new Date(order.created_at).toLocaleDateString() %></td>
                                                    <td>
                                                        <div class="action-buttons">
                                                            <button class="btn btn-sm btn-outline" onclick="viewOrder('<%= order.id %>')" title="View Details">
                                                                <i class="fas fa-eye"></i>
                                                            </button>
                                                            <button class="btn btn-sm btn-primary" onclick="editOrder('<%= order.id %>')" title="Edit Order">
                                                                <i class="fas fa-edit"></i>
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            <% }); %>
                                        </tbody>
                                    </table>
                                </div>
                            <% } else { %>
                                <div class="empty-state">
                                    <i class="fas fa-box-open"></i>
                                    <h4>No Orders Yet</h4>
                                    <p>Orders will appear here when customers place them in your WhatsApp groups.</p>
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        <% } else { %>
            <!-- Add New Business Form -->
            <div class="page-header scroll-reveal">
                <div>
                    <h1 class="page-title">Add New Business</h1>
                    <p class="page-subtitle">Create a new business to start managing orders</p>
                </div>
            </div>

            <div class="add-business-bg">
                <div class="add-business-center">
                    <div class="add-business-card">
                        <div class="add-business-header">
                            <h2 class="add-business-title">Create New Business</h2>
                            <p class="add-business-subtitle">Set up your business to start receiving orders through WhatsApp.</p>
                        </div>
                        <div class="add-business-body">
                            <form id="newBusinessForm" class="business-form">
                                <div class="add-business-form-group">
                                    <label for="businessName" class="add-business-label">Business Name *</label>
                                    <input type="text" class="add-business-input" id="businessName" name="business_name" required placeholder="e.g. FreshMart Groceries">
                                </div>
                                <div class="add-business-actions">
                                    <a href="/dashboard" class="btn btn-secondary">Cancel</a>
                                    <button type="submit" class="btn btn-primary">Create Business</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        <% } %>
    </main>

    <!-- Add Group Modal -->
    <div id="addGroupModal" class="modal-overlay">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Add WhatsApp Group</h3>
                <button class="close-modal" onclick="closeModal('addGroupModal')">&times;</button>
            </div>
            <div class="modal-body">
                <form id="addGroupForm">
                    <input type="hidden" name="business_id" value="<%= business ? business.business_id : '' %>">
                    <div class="form-group">
                        <label for="groupType" class="form-label">Group Type *</label>
                        <select class="form-input" id="groupType" name="group_type" required>
                            <option value="">Select group type</option>
                            <option value="sales">Sales Group</option>
                            <option value="delivery">Delivery Group</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="groupName" class="form-label">Group Name *</label>
                        <input type="text" class="form-input" id="groupName" name="group_name" required placeholder="e.g. Sales Team">
                    </div>
                    <div class="form-group">
                        <label for="groupId" class="form-label">Group ID *</label>
                        <input type="text" class="form-input" id="groupId" name="group_id" required placeholder="Get this by typing /setup in your WhatsApp group">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeModal('addGroupModal')">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="addGroup()">Add Group</button>
            </div>
        </div>
    </div>

    <!-- Group Details Modal -->
    <div id="groupDetailsModal" class="modal-overlay">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Group Details</h3>
                <button class="close-modal" onclick="closeModal('groupDetailsModal')">&times;</button>
            </div>
            <div class="modal-body" id="groupDetailsContent">
                Loading...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeModal('groupDetailsModal')">Close</button>
            </div>
        </div>
    </div>

    <!-- Order Details Modal -->
    <div id="orderDetailsModal" class="modal-overlay">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Order Details</h3>
                <button class="close-modal" onclick="closeModal('orderDetailsModal')">&times;</button>
            </div>
            <div class="modal-body" id="orderDetailsContent">
                Loading...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeModal('orderDetailsModal')">Close</button>
                <button type="button" class="btn btn-primary" id="editOrderBtn" style="display: none;">
                    <i class="fas fa-edit"></i> Edit Order
                </button>
            </div>
        </div>
    </div>

<style>
.add-business-bg {
  min-height: 100vh;
  background: linear-gradient(135deg, var(--background-corner), var(--background-middle), var(--background-corner));
  display: flex;
  align-items: center;
  justify-content: center;
}
.add-business-center {
  width: 100vw;
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}
.add-business-card {
  background: var(--card-bg);
  border-radius: 18px;
  box-shadow: 0 8px 32px rgba(16,185,129,0.08), 0 1.5px 4px rgba(0,0,0,0.04);
  max-width: 400px;
  width: 95vw;
  padding: 1.5rem 1.2rem 1.2rem 1.2rem;
  display: flex;
  flex-direction: column;
  gap: 1.1rem;
  border: 1px solid var(--card-border);
}
.add-business-header {
  text-align: center;
}
.add-business-title {
  font-size: 1.7rem;
  font-weight: 900;
  color: var(--primary-color);
  margin-bottom: 0.15rem;
}
.add-business-subtitle {
  color: var(--text-secondary);
  font-size: 0.98rem;
  margin-bottom: 0;
}
.add-business-body {
  width: 100%;
  font-size: 0.93rem;
}
.add-business-error {
  background: rgba(239,68,68,0.08);
  color: #ef4444;
  border: 1px solid #ef4444;
  border-radius: 8px;
  padding: 0.75rem 1rem;
  margin-bottom: 1.25rem;
  font-size: 0.98rem;
  text-align: center;
}
.add-business-form-group {
  margin-bottom: 1.5rem;
}
.add-business-form-group label,
.add-business-label {
  font-size: 0.97rem;
}
.add-business-input {
  width: 100%;
  padding: 0.65rem 0.9rem;
  border-radius: 8px;
  border: 1px solid var(--card-border);
  background: var(--card-bg);
  color: var(--text-primary);
  font-size: 0.97rem;
  transition: border-color 0.18s;
  margin-bottom: 0.25rem;
}
.add-business-input:focus {
  border-color: var(--primary-color);
  outline: none;
}
.add-business-hint {
  color: var(--text-muted);
  font-size: 0.88rem;
  margin-top: 0.1rem;
}
.add-business-nextsteps {
  background: rgba(59,130,246,0.06);
  border-radius: 10px;
  padding: 0.7rem 1rem;
  margin-bottom: 1.1rem;
  color: var(--text-secondary);
  font-size: 0.93rem;
}
.add-business-nextsteps h5 {
  font-size: 1.01rem;
  font-weight: 700;
  color: var(--info-color);
  margin-bottom: 0.5rem;
  display: flex;
  align-items: center;
  gap: 0.4rem;
}
.add-business-nextsteps h5 .fa-info-circle {
  font-size: 1rem;
  color: var(--info-color);
  opacity: 0.7;
}
.add-business-actions {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
  margin-top: 1.5rem;
}
.btn.btn-primary {
  background: var(--primary-color);
  color: #fff;
  border: none;
  border-radius: 8px;
  padding: 0.7rem 1.5rem;
  font-size: 1rem;
  font-weight: 600;
  transition: background 0.18s, box-shadow 0.18s, transform 0.18s;
  box-shadow: 0 2px 8px rgba(16,185,129,0.08);
}
.btn.btn-primary:hover {
  background: #059669;
  transform: translateY(-2px) scale(1.04);
  box-shadow: 0 4px 16px rgba(16,185,129,0.13);
}
.btn.btn-secondary {
  background: var(--surface-color);
  color: var(--primary-color);
  border: 1px solid var(--primary-color);
  border-radius: 8px;
  padding: 0.7rem 1.5rem;
  font-size: 1rem;
  font-weight: 600;
  transition: background 0.18s, color 0.18s, box-shadow 0.18s, transform 0.18s;
}
.btn.btn-secondary:hover {
  background: var(--primary-color);
  color: #fff;
  box-shadow: 0 4px 16px rgba(16,185,129,0.13);
  transform: translateY(-2px) scale(1.04);
}
@media (max-width: 600px) {
  .add-business-card { padding: 1.2rem 0.5rem; }
  .add-business-title { font-size: 1.3rem; }
}
/* Fix nav-link color for visibility */
.header .nav-link {
  color: var(--primary-color);
  background: transparent;
}
.header .nav-link.active {
  background: var(--primary-color);
  color: #fff;
}
.header .nav-link:hover {
  color: #059669;
  background: var(--surface-color);
}
/* Business page specific styles */
.business-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.form-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
}

.form-group.full-width {
    grid-column: 1 / -1;
}

.form-actions {
    display: flex;
    gap: 1rem;
    justify-content: flex-start;
    margin-top: 1rem;
}

.details-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
}

.detail-item {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.detail-label {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.detail-value {
    font-size: 0.875rem;
    color: var(--text-primary);
    font-weight: 500;
}

.detail-value code {
    background: var(--surface-secondary);
    padding: 0.25rem 0.5rem;
    border-radius: var(--radius-sm);
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
    font-size: 0.75rem;
    color: var(--text-primary);
}

.business-name {
    font-weight: 600;
    color: var(--text-primary);
    text-transform: capitalize;
}

.group-info {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.group-name {
    font-weight: 600;
    color: var(--text-primary);
}

.group-id {
    font-size: 0.8rem;
    color: var(--text-muted);
    font-family: monospace;
}

.empty-state {
    text-align: center;
    padding: 3rem 1.5rem;
    color: var(--text-secondary);
}

.empty-state i {
    font-size: 3rem;
    margin-bottom: 1rem;
    color: var(--text-muted);
}

.empty-state h4 {
    margin-bottom: 0.5rem;
    color: var(--text-primary);
}

.empty-state p {
    margin-bottom: 1.5rem;
    color: var(--text-secondary);
}

/* Side card layout */
.business-side-card {
    position: sticky;
    top: 2rem;
    width: 300px;
    background: var(--surface-color);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-sm);
    margin-bottom: 2rem;
    transition: transform 0.18s cubic-bezier(0.4,0,0.2,1), box-shadow 0.18s cubic-bezier(0.4,0,0.2,1);
}

.business-side-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

.side-card-header {
    padding: 1.5rem 1.5rem 1rem;
    border-bottom: 1px solid var(--border-color);
}

.side-card-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--text-primary);
    margin: 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.side-card-content {
    padding: 1rem 1.5rem 1.5rem;
}

.business-details-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.detail-row {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.side-card-actions {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.main-content-area {
    flex: 1;
    margin-left: 2rem;
}

/* Layout for business page */
.business-page-layout {
    display: flex;
    gap: 2rem;
    align-items: flex-start;
}

/* Stats grid for business page */
.stats-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
    margin-bottom: 2rem;
}

.stat-card {
    background: var(--surface-color);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-lg);
    padding: 1.5rem;
    box-shadow: var(--shadow-sm);
    transition: transform 0.18s cubic-bezier(0.4,0,0.2,1), box-shadow 0.18s cubic-bezier(0.4,0,0.2,1);
}

.stat-card:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: 0 8px 32px rgba(16,185,129,0.08), 0 1.5px 4px rgba(0,0,0,0.04);
}

.stat-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1rem;
}

.stat-title {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--text-secondary);
}

.stat-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    border-radius: var(--radius);
    font-size: 1rem;
}

.stat-card.orders .stat-icon {
    background: rgba(16, 185, 129, 0.1);
    color: var(--primary-color);
}

.stat-card.completed .stat-icon {
    background: rgba(34, 197, 94, 0.1);
    color: #22c55e;
}

.stat-card.pending .stat-icon {
    background: rgba(245, 158, 11, 0.1);
    color: #f59e0b;
}

.stat-value {
    font-size: 2rem;
    font-weight: 700;
    color: var(--text-primary);
}

/* Improved group details modal */
.group-details-content {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.group-details-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--border-color);
}

.group-avatar {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background: var(--primary-color);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.25rem;
    font-weight: 600;
}

.group-header-info h4 {
    margin: 0 0 0.25rem 0;
    color: var(--text-primary);
    font-size: 1.25rem;
}

.group-header-info p {
    margin: 0;
    color: var(--text-secondary);
    font-size: 0.875rem;
}

.group-details-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
}

.group-detail-item {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.group-detail-label {
    font-size: 0.75rem;
    font-weight: 600;
    color: var(--text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.group-detail-value {
    font-size: 0.875rem;
    color: var(--text-primary);
    font-weight: 500;
}

.group-detail-value code {
    background: var(--surface-color);
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-family: monospace;
    color: var(--primary-color);
    font-weight: 600;
    font-size: 0.75rem;
}

.group-info-note {
    background: rgba(59, 130, 246, 0.1);
    border: 1px solid rgba(59, 130, 246, 0.2);
    border-radius: var(--radius);
    padding: 1rem;
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
}

.group-info-note i {
    color: var(--info-color);
    margin-top: 0.125rem;
}

.group-info-note-content h5 {
    margin: 0 0 0.5rem 0;
    color: var(--text-primary);
    font-size: 0.875rem;
    font-weight: 600;
}

.group-info-note-content p {
    margin: 0;
    color: var(--text-secondary);
    font-size: 0.8125rem;
    line-height: 1.4;
}

/* Responsive */
@media (max-width: 1024px) {
    .business-page-layout {
        flex-direction: column;
    }
    
    .business-side-card {
        width: 100%;
        position: static;
    }
    
    .main-content-area {
        margin-left: 0;
    }
    
    .stats-grid {
        grid-template-columns: repeat(3, 1fr);
    }
}

@media (max-width: 768px) {
    .form-grid,
    .details-grid,
    .group-details-grid {
        grid-template-columns: 1fr;
    }
    
    .stats-grid {
        grid-template-columns: repeat(2, 1fr);
    }
    
    .form-actions {
        flex-direction: column;
    }
}

@media (max-width: 480px) {
    .stats-grid {
        grid-template-columns: 1fr;
    }
    
    .action-buttons {
        flex-direction: column;
        gap: 0.25rem;
    }
    
    .action-buttons .btn {
        width: 100%;
        justify-content: center;
    }
    
    .order-details-grid {
        grid-template-columns: 1fr;
    }
    
    .order-details-header {
        flex-direction: column;
        text-align: center;
        gap: 0.75rem;
    }
}

/* Modal styles with blur effect */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.modal-overlay.show {
    opacity: 1;
    visibility: visible;
}

.modal-content {
    background: var(--surface-color);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-lg);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    max-width: 500px;
    width: 90%;
    max-height: 90vh;
    overflow-y: auto;
    transform: scale(0.95) translateY(-10px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.modal-overlay.show .modal-content {
    transform: scale(1) translateY(0);
}

[data-theme="dark"] .modal-content {
    background: rgba(30, 41, 59, 0.95);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border-color: rgba(148, 163, 184, 0.2);
}

/* Business page specific styles */
.business-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 2rem;
}

.business-title {
    font-size: 2rem;
    font-weight: 700;
    color: var(--text-primary);
    text-transform: capitalize;
}

.business-subtitle {
    color: var(--text-secondary);
    font-size: 1rem;
    margin-top: 0.25rem;
}

/* Action buttons styling */
.action-buttons {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

.action-buttons .btn {
    padding: 0.375rem 0.5rem;
    font-size: 0.75rem;
}

/* Status badges styling */
.status-badge {
    display: inline-flex;
    align-items: center;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: capitalize;
    letter-spacing: 0.025em;
}

.status-badge.pending {
    background-color: rgba(245, 158, 11, 0.1);
    color: #f59e0b;
    border: 1px solid rgba(245, 158, 11, 0.2);
}

.status-badge.delivered {
    background-color: rgba(16, 185, 129, 0.1);
    color: #10b981;
    border: 1px solid rgba(16, 185, 129, 0.2);
}

.status-badge.cancelled {
    background-color: rgba(239, 68, 68, 0.1);
    color: #ef4444;
    border: 1px solid rgba(239, 68, 68, 0.2);
}

.status-badge.processing {
    background-color: rgba(59, 130, 246, 0.1);
    color: #3b82f6;
    border: 1px solid rgba(59, 130, 246, 0.2);
}

/* Order details modal styling */
.order-details-content {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.order-details-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--border-color);
}

.order-avatar {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    background: linear-gradient(135deg, var(--primary-color), #10b981);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.25rem;
}

.order-header-info h4 {
    margin: 0;
    color: var(--text-primary);
    font-size: 1.25rem;
    font-weight: 700;
}

.order-header-info p {
    margin: 0.25rem 0 0 0;
    color: var(--text-secondary);
    font-size: 0.875rem;
}

.order-details-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
}

.order-detail-item {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.order-detail-item.full-width {
    grid-column: 1 / -1;
}

.order-detail-label {
    font-size: 0.75rem;
    font-weight: 600;
    color: var(--text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.order-detail-value {
    font-size: 0.875rem;
    color: var(--text-primary);
    font-weight: 500;
}

.notes-box {
    background: var(--surface-color);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 0.75rem;
    font-style: italic;
}

/* Items list styling */
.items-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.item-card {
    background: var(--surface-color);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 0.75rem;
    transition: all 0.2s ease;
}

.item-card:hover {
    border-color: var(--primary-color);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.item-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.item-name {
    font-weight: 600;
    color: var(--text-primary);
}

.item-quantity {
    font-size: 0.75rem;
    color: var(--text-secondary);
    background: var(--background-color);
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-weight: 500;
}
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Theme toggle
        const themeToggle = document.getElementById('theme-toggle');
        const html = document.documentElement;
        const sunIcon = themeToggle.querySelector('.fa-sun');
        const moonIcon = themeToggle.querySelector('.fa-moon');

        function applyTheme(theme) {
            html.setAttribute('data-theme', theme);
            if (theme === 'dark') {
                sunIcon.style.display = 'none';
                moonIcon.style.display = 'inline-block';
            } else {
                sunIcon.style.display = 'inline-block';
                moonIcon.style.display = 'none';
            }
        }

        const savedTheme = localStorage.getItem('theme') || 'light';
        applyTheme(savedTheme);

        themeToggle.addEventListener('click', () => {
            const newTheme = html.getAttribute('data-theme') === 'light' ? 'dark' : 'light';
            localStorage.setItem('theme', newTheme);
            applyTheme(newTheme);
        });

        // Dropdown functionality
        function setupDropdown(buttonId, menuId) {
            const dropdownBtn = document.getElementById(buttonId);
            const dropdownMenu = document.getElementById(menuId);

            if (dropdownBtn && dropdownMenu) {
                dropdownBtn.addEventListener('click', (event) => {
                    event.stopPropagation();
                    document.querySelectorAll('.dropdown-content.show').forEach(menu => {
                        if (menu.id !== menuId) menu.classList.remove('show');
                    });
                    dropdownMenu.classList.toggle('show');
                });
            }
        }
        setupDropdown('profileDropdown', 'profileMenu');
        setupDropdown('exportDropdown', 'exportMenu');
        window.addEventListener('click', () => document.querySelectorAll('.dropdown-content.show').forEach(m => m.classList.remove('show')));

        // Scroll reveal functionality
        function handleScrollReveal() {
            const scrollRevealElements = document.querySelectorAll('.scroll-reveal');
            
            scrollRevealElements.forEach(element => {
                const elementTop = element.getBoundingClientRect().top;
                const elementVisible = 150;
                
                if (elementTop < window.innerHeight - elementVisible) {
                    element.classList.add('visible');
                }
            });
        }

        // Initial check for elements in viewport
        handleScrollReveal();
        
        // Add scroll event listener
        window.addEventListener('scroll', handleScrollReveal);
        
        // Add resize event listener to handle responsive changes
        window.addEventListener('resize', handleScrollReveal);
    });

    // Business form submission
    document.getElementById('businessForm')?.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        try {
            const formData = new FormData(e.target);
            const response = await fetch('/api/businesses/<%= business ? business.business_id : "" %>', {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    business_name: formData.get('business_name'),
                    user_id: '<%= userId %>'
                })
            });
            
            const result = await response.json();
            
            if (response.ok) {
                alert('Business updated successfully!');
                location.reload();
            } else {
                alert('Failed to update business: ' + result.error);
            }
        } catch (error) {
            alert('Error updating business: ' + error.message);
        }
    });

    // New business form submission
    document.getElementById('newBusinessForm')?.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        try {
            const formData = new FormData(e.target);
            const response = await fetch('/api/businesses', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    business_name: formData.get('business_name'),
                    user_id: '<%= userId %>'
                })
            });
            
            const result = await response.json();
            
            if (response.ok) {
                alert('Business created successfully!');
                window.location.href = '/business/' + result.business_id;
            } else {
                alert('Failed to create business: ' + result.error);
            }
        } catch (error) {
            alert('Error creating business: ' + error.message);
        }
    });

    async function deleteBusiness() {
        if (!confirm('Are you sure you want to delete this business? This action cannot be undone and will also delete all associated groups and orders.')) {
            return;
        }
        
        try {
            const response = await fetch('/api/businesses/<%= business ? business.business_id : "" %>?user_id=<%= userId %>', {
                method: 'DELETE'
            });
            
            const result = await response.json();
            
            if (response.ok) {
                alert('Business deleted successfully!');
                window.location.href = '/dashboard';
            } else {
                alert('Failed to delete business: ' + result.error);
            }
        } catch (error) {
            alert('Error deleting business: ' + error.message);
        }
    }

    function editBusinessName() {
        const newName = prompt('Enter new business name:', '<%= business ? business.business_name : "" %>');
        if (newName && newName.trim() !== '') {
            updateBusinessName(newName.trim());
        }
    }

    async function updateBusinessName(newName) {
        try {
            const response = await fetch('/api/businesses/<%= business ? business.business_id : "" %>', {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    business_name: newName,
                    user_id: '<%= userId %>'
                })
            });
            
            const result = await response.json();
            
            if (response.ok) {
                alert('Business name updated successfully!');
                location.reload();
            } else {
                alert('Failed to update business name: ' + result.error);
            }
        } catch (error) {
            alert('Error updating business name: ' + error.message);
        }
    }

    function openAddGroupModal() {
        document.getElementById('addGroupModal').classList.add('show');
    }

    function closeModal(modalId) {
        document.getElementById(modalId).classList.remove('show');
    }

    async function addGroup() {
        const form = document.getElementById('addGroupForm');
        const formData = new FormData(form);
        
        try {
            const response = await fetch('/api/groups', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    business_id: formData.get('business_id'),
                    group_type: formData.get('group_type'),
                    group_name: formData.get('group_name'),
                    group_id: formData.get('group_id'),
                    user_id: '<%= userId %>'
                })
            });
            
            const result = await response.json();
            
            if (response.ok) {
                alert('Group added successfully!');
                location.reload();
            } else {
                alert('Failed to add group: ' + result.error);
            }
        } catch (error) {
            alert('Error adding group: ' + error.message);
        }
    }

    function viewGroup(groupId) {
        fetch(`/api/groups/${groupId}?userId=<%= userId %>`)
            .then(response => response.json())
            .then(group => {
                if (group.error) {
                    alert('Failed to load group details: ' + group.error);
                    return;
                }
                
                const modal = document.getElementById('groupDetailsModal');
                const content = document.getElementById('groupDetailsContent');
                
                content.innerHTML = `
                    <div class="group-details-content">
                        <div class="group-details-header">
                            <div class="group-avatar">
                                <i class="fas fa-comments"></i>
                            </div>
                            <div class="group-header-info">
                                <h4>${group.group_name}</h4>
                                <p>${group.group_type} group</p>
                            </div>
                        </div>
                        
                        <div class="group-details-grid">
                            <div class="group-detail-item">
                                <label class="group-detail-label">Group Type</label>
                                <div class="group-detail-value">
                                    <span class="status-badge ${group.group_type === 'sales' ? 'success' : 'info'}">${group.group_type}</span>
                                </div>
                            </div>
                            <div class="group-detail-item">
                                <label class="group-detail-label">Business</label>
                                <div class="group-detail-value">${group.business_name}</div>
                            </div>
                            <div class="group-detail-item">
                                <label class="group-detail-label">Created</label>
                                <div class="group-detail-value">${new Date(group.created_at).toLocaleString()}</div>
                            </div>
                            <div class="group-detail-item">
                                <label class="group-detail-label">Status</label>
                                <div class="group-detail-value">
                                    <span class="status-badge active">Active</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="group-detail-item" style="grid-column: 1 / -1;">
                            <label class="group-detail-label">Group ID</label>
                            <div class="group-detail-value">
                                <code>${group.group_id}</code>
                            </div>
                        </div>
                        
                        <div class="group-info-note">
                            <i class="fas fa-info-circle"></i>
                            <div class="group-info-note-content">
                                <h5>Connected to WhatsApp</h5>
                                <p>This group is connected to your WhatsApp business. Orders will be automatically sent to the appropriate group based on their status.</p>
                            </div>
                        </div>
                    </div>
                `;
                
                modal.classList.add('show');
            })
            .catch(error => {
                alert('Error loading group details: ' + error.message);
            });
    }

    async function removeGroup(groupId) {
        if (!confirm('Are you sure you want to remove this group?')) {
            return;
        }
        
        try {
            const response = await fetch(`/api/groups/${groupId}?user_id=<%= userId %>`, {
                method: 'DELETE'
            });
            
            if (response.ok) {
                alert('Group removed successfully!');
                location.reload();
            } else {
                alert('Failed to remove group');
            }
        } catch (error) {
            alert('Error removing group: ' + error.message);
        }
    }

    function viewOrder(orderId) {
        fetch(`/api/orders/${orderId}?userId=<%= userId %>`)
            .then(response => response.json())
            .then(order => {
                if (order.error) {
                    alert('Failed to load order details: ' + order.error);
                    return;
                }
                
                const modal = document.getElementById('orderDetailsModal');
                const content = document.getElementById('orderDetailsContent');
                const editBtn = document.getElementById('editOrderBtn');
                
                let items = [];
                try {
                    items = typeof order.items === 'string' ? JSON.parse(order.items) : order.items;
                } catch (e) {
                    items = [{ name: order.items, quantity: 1 }];
                }
                
                content.innerHTML = `
                    <div class="order-details-content">
                        <div class="order-details-header">
                            <div class="order-avatar">
                                <i class="fas fa-shopping-cart"></i>
                            </div>
                            <div class="order-header-info">
                                <h4>Order #${order.order_id}</h4>
                                <p>${order.business_name}</p>
                            </div>
                        </div>
                        
                        <div class="order-details-grid">
                            <div class="order-detail-item">
                                <label class="order-detail-label">Status</label>
                                <div class="order-detail-value">
                                    <span class="status-badge ${order.status}">${order.status}</span>
                                </div>
                            </div>
                            <div class="order-detail-item">
                                <label class="order-detail-label">Created</label>
                                <div class="order-detail-value">${new Date(order.created_at).toLocaleString()}</div>
                            </div>
                            <div class="order-detail-item">
                                <label class="order-detail-label">Customer Name</label>
                                <div class="order-detail-value">${order.customer_name}</div>
                            </div>
                            <div class="order-detail-item">
                                <label class="order-detail-label">Customer Phone</label>
                                <div class="order-detail-value">${order.customer_phone}</div>
                            </div>
                        </div>
                        
                        <div class="order-detail-item full-width">
                            <label class="order-detail-label">Delivery Address</label>
                            <div class="order-detail-value">${order.address || 'No address provided'}</div>
                        </div>
                        
                        <div class="order-detail-item full-width">
                            <label class="order-detail-label">Order Items</label>
                            <div class="order-detail-value">
                                <div class="items-list">
                                    ${items.map(item => `
                                        <div class="item-card">
                                            <div class="item-info">
                                                <div class="item-name">${item.name || item}</div>
                                                <div class="item-quantity">Qty: ${item.quantity || 1}</div>
                                            </div>
                                        </div>
                                    `).join('')}
                                </div>
                            </div>
                        </div>
                        
                        ${order.notes ? `
                            <div class="order-detail-item full-width">
                                <label class="order-detail-label">Notes</label>
                                <div class="order-detail-value notes-box">${order.notes}</div>
                            </div>
                        ` : ''}
                    </div>
                `;
                
                // Show edit button and set up click handler
                editBtn.style.display = 'inline-flex';
                editBtn.onclick = () => editOrder(orderId);
                
                modal.classList.add('show');
            })
            .catch(error => {
                alert('Error loading order details: ' + error.message);
            });
    }

    function editOrder(orderId) {
        // Close the current modal
        closeModal('orderDetailsModal');
        
        // Redirect to the orders page with edit mode
        window.location.href = `/orders?business=<%= business.business_id %>&edit=${orderId}`;
    }

    function exportBusinessOrders(format = 'csv') {
        const queryParams = new URLSearchParams({
            business_id: '<%= business.business_id %>',
            userId: '<%= userId %>',
            format: format
        });
        
        window.open(`/api/export/orders?${queryParams}`, '_blank');
    }
</script>
</body>
</html> 