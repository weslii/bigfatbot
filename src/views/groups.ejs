<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Groups Management</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="/css/groups-dashboard.css">
</head>
<body>

    <header class="header">
        <div class="header-content">
            <div class="header-left">
                <a href="/dashboard" class="logo-section">
                    <div class="logo-icon"><i class="fas fa-users"></i></div>
                    <div class="logo-text"><span class="main-title">Groups</span></div>
                </a>
            </div>
            <div class="header-right">
                <a href="/dashboard" class="nav-link">Dashboard</a>
                <a href="/orders" class="nav-link">Orders</a>
                <a href="/groups" class="nav-link active">Groups</a>
                <a href="/businesses" class="nav-link">Businesses</a>
                <button class="btn btn-icon" id="theme-toggle" aria-label="Toggle Theme">
                    <i class="fas fa-sun"></i><i class="fas fa-moon" style="display: none;"></i>
                </button>
                <div class="dropdown">
                    <button class="btn btn-icon" id="profileDropdown"><i class="fas fa-user"></i></button>
                    <div class="dropdown-content" id="profileMenu">
                        <a href="/settings" class="dropdown-item"><i class="fas fa-cog"></i> Settings</a>
                        <form action="/logout" method="post" class="dropdown-item" style="padding: 0; margin: 0;">
                            <button type="submit" style="all: unset; cursor: pointer; display: flex; align-items: center; gap: 0.5rem; padding: 0.75rem 1rem; width: 100%;"><i class="fas fa-sign-out-alt"></i> Logout</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="main-content">
        <div class="page-header">
            <div>
                <h1 class="page-title">Groups Overview</h1>
                <p class="page-subtitle">Manage your WhatsApp sales and delivery groups.</p>
            </div>
            <div class="header-actions-right">
                <button class="btn btn-primary" id="openAddGroupModal"><i class="fas fa-plus"></i> Add New Group</button>
            </div>
        </div>

        <% const totalGroups = groups.length; %>
        <% const activeBusinesses = new Set(groups.map(g => g.business_id)).size; %>
        
        <!-- KPI Cards -->
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1.5rem; margin-bottom: 2rem;">
            <div style="background: var(--card-bg); backdrop-filter: blur(5px); border: 1px solid #e2e8f0; border-radius: 16px; padding: 1.5rem; box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1); display: flex; align-items: center; gap: 1rem;">
                <div style="font-size: 1.5rem; width: 50px; height: 50px; border-radius: 50%; display: flex; align-items: center; justify-content: center; background-color: rgba(0, 0, 0, 0.05);"><i class="fas fa-comments"></i></div>
                <div>
                    <h3 style="font-size: 1.5rem; font-weight: 700; color: #1e293b; margin: 0;"><%= totalGroups %></h3>
                    <p style="font-size: 0.875rem; color: #475569; margin: 0;">Total Groups</p>
                </div>
            </div>
            <div style="background: var(--card-bg); backdrop-filter: blur(5px); border: 1px solid #e2e8f0; border-radius: 16px; padding: 1.5rem; box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1); display: flex; align-items: center; gap: 1rem;">
                <div style="font-size: 1.5rem; width: 50px; height: 50px; border-radius: 50%; display: flex; align-items: center; justify-content: center; background-color: rgba(0, 0, 0, 0.05);"><i class="fas fa-store"></i></div>
                <div>
                    <h3 style="font-size: 1.5rem; font-weight: 700; color: #1e293b; margin: 0;"><%= activeBusinesses %></h3>
                    <p style="font-size: 0.875rem; color: #475569; margin: 0;">Active Businesses</p>
                </div>
            </div>
            <div style="background: var(--card-bg); backdrop-filter: blur(5px); border: 1px solid #e2e8f0; border-radius: 16px; padding: 1.5rem; box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1); display: flex; align-items: center; gap: 1rem;">
                <div style="font-size: 1.5rem; width: 50px; height: 50px; border-radius: 50%; display: flex; align-items: center; justify-content: center; background-color: rgba(0, 0, 0, 0.05);"><i class="fas fa-arrow-up"></i></div>
                <div>
                    <h3 style="font-size: 1.5rem; font-weight: 700; color: #1e293b; margin: 0;"><%= groups.filter(g => g.group_type === 'sales').length %></h3>
                    <p style="font-size: 0.875rem; color: #475569; margin: 0;">Sales Groups</p>
                </div>
            </div>
            <div style="background: var(--card-bg); backdrop-filter: blur(5px); border: 1px solid #e2e8f0; border-radius: 16px; padding: 1.5rem; box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05); transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1); display: flex; align-items: center; gap: 1rem;">
                <div style="font-size: 1.5rem; width: 50px; height: 50px; border-radius: 50%; display: flex; align-items: center; justify-content: center; background-color: rgba(0, 0, 0, 0.05);"><i class="fas fa-truck"></i></div>
                <div>
                    <h3 style="font-size: 1.5rem; font-weight: 700; color: #1e293b; margin: 0;"><%= groups.filter(g => g.group_type === 'delivery').length %></h3>
                    <p style="font-size: 0.875rem; color: #475569; margin: 0;">Delivery Groups</p>
                </div>
            </div>
        </div>

        <!-- Groups Table -->
        <div style="background: var(--card-bg); backdrop-filter: blur(5px); border: 1px solid #e2e8f0; border-radius: 16px; margin-bottom: 1.5rem; box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);">
            <div style="padding: 1.5rem; border-bottom: 1px solid #e2e8f0; display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 1rem;">
                <h2 style="font-size: 1.125rem; font-weight: 600; color: #1e293b; margin: 0; display: flex; align-items: center; gap: 0.5rem;"><i class="fas fa-list-alt"></i> All Groups</h2>
                <div style="display: flex; gap: 1rem; align-items: flex-end;">
                    <div style="display: flex; flex-direction: column; flex-grow: 1;">
                        <label style="font-size: 0.875rem; font-weight: 500; color: #1e293b; margin-bottom: 0.5rem;">Filter by Business</label>
                        <select id="businessFilter" style="padding: 0.625rem 0.75rem; border: 1px solid #e2e8f0; border-radius: 8px; font-size: 0.875rem; background: rgba(241, 245, 249, 0.5); color: #1e293b;">
                            <option value="">All Businesses</option>
                             <% businesses.forEach(business => { %>
                              <option value="<%= business.business_id %>"><%= business.business_name %></option>
                            <% }); %>
                        </select>
                    </div>
                     <div style="display: flex; flex-direction: column; flex-grow: 1;">
                        <label style="font-size: 0.875rem; font-weight: 500; color: #1e293b; margin-bottom: 0.5rem;">Filter by Type</label>
                        <select id="typeFilter" style="padding: 0.625rem 0.75rem; border: 1px solid #e2e8f0; border-radius: 8px; font-size: 0.875rem; background: rgba(241, 245, 249, 0.5); color: #1e293b;">
                            <option value="">All Types</option>
                            <option value="sales">Sales</option>
                            <option value="delivery">Delivery</option>
                        </select>
                    </div>
                </div>
            </div>
            <div style="padding: 1.5rem;">
                <div style="overflow-x: auto; border-radius: 8px; border: 1px solid #e2e8f0;">
                    <table style="width: 100%; border-collapse: collapse; font-size: 0.875rem;">
                        <thead>
                            <tr>
                                <th style="background: transparent; padding: 0.75rem 1rem; text-align: left; font-weight: 600; color: #1e293b; border-bottom: 1px solid #e2e8f0; white-space: nowrap;">Business</th>
                                <th style="background: transparent; padding: 0.75rem 1rem; text-align: left; font-weight: 600; color: #1e293b; border-bottom: 1px solid #e2e8f0; white-space: nowrap;">Group Name</th>
                                <th style="background: transparent; padding: 0.75rem 1rem; text-align: left; font-weight: 600; color: #1e293b; border-bottom: 1px solid #e2e8f0; white-space: nowrap;">Type</th>
                                <th style="background: transparent; padding: 0.75rem 1rem; text-align: left; font-weight: 600; color: #1e293b; border-bottom: 1px solid #e2e8f0; white-space: nowrap;">Status</th>
                                <th style="background: transparent; padding: 0.75rem 1rem; text-align: left; font-weight: 600; color: #1e293b; border-bottom: 1px solid #e2e8f0; white-space: nowrap;">Created</th>
                                <th style="background: transparent; padding: 0.75rem 1rem; text-align: left; font-weight: 600; color: #1e293b; border-bottom: 1px solid #e2e8f0; white-space: nowrap;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (groups && groups.length > 0) { %>
                                <% groups.forEach(group => { %>
                                    <tr data-business="<%= group.business_id %>" data-type="<%= group.group_type %>" style="transition: background-color 0.2s;">
                                        <td style="padding: 0.75rem 1rem; border-bottom: 1px solid #e2e8f0; vertical-align: middle;">
                                            <div style="display: flex; align-items: center; gap: 0.75rem;">
                                                <div style="width: 32px; height: 32px; background: #10b981; color: white; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-weight: 600;"><%= group.business_name.charAt(0).toUpperCase() %></div>
                                                <span><%= group.business_name %></span>
                                                <% 
                                                    const businessGroups = groups.filter(g => g.business_id === group.business_id);
                                                    const hasSales = businessGroups.some(g => g.group_type === 'sales');
                                                    const hasDelivery = businessGroups.some(g => g.group_type === 'delivery');
                                                    const isAtLimit = hasSales && hasDelivery;
                                                %>
                                                <% if (isAtLimit) { %>
                                                    <span style="display: inline-flex; align-items: center; padding: 0.25rem 0.75rem; border-radius: 9999px; font-size: 0.75rem; font-weight: 500; background: rgb(16 185 129 / 0.1); color: #10b981;" title="This business has both sales and delivery groups">
                                                        <i class="fas fa-check-circle"></i> Complete
                                                    </span>
                                                <% } %>
                                            </div>
                                        </td>
                                        <td style="padding: 0.75rem 1rem; border-bottom: 1px solid #e2e8f0; vertical-align: middle;">
                                            <strong><%= group.group_name %></strong><br>
                                            <small style="color: #94a3b8;"><%= group.group_id %></small>
                                        </td>
                                        <td style="padding: 0.75rem 1rem; border-bottom: 1px solid #e2e8f0; vertical-align: middle;">
                                            <span style="font-size: 0.75rem; font-weight: 500; padding: 0.2rem 0.6rem; border-radius: 8px; text-transform: capitalize; background: rgb(245 158 11 / 0.1); color: #f59e0b;"><%= group.group_type %></span>
                                        </td>
                                        <td style="padding: 0.75rem 1rem; border-bottom: 1px solid #e2e8f0; vertical-align: middle;">
                                            <span style="display: inline-flex; align-items: center; padding: 0.25rem 0.75rem; border-radius: 9999px; font-size: 0.75rem; font-weight: 500; background: rgb(59 130 246 / 0.1); color: #3b82f6;">
                                                <%= group.is_active ? 'Active' : 'Inactive' %>
                                            </span>
                                        </td>
                                        <td style="padding: 0.75rem 1rem; border-bottom: 1px solid #e2e8f0; vertical-align: middle;"><%= new Date(group.created_at).toLocaleDateString() %></td>
                                        <td style="padding: 0.75rem 1rem; border-bottom: 1px solid #e2e8f0; vertical-align: middle;">
                                            <div style="display: flex; gap: 0.25rem;">
                                                <button style="padding: 0.375rem 0.75rem; font-size: 0.8125rem; background: transparent; border: 1px solid #e2e8f0; color: #64748b; border-radius: 8px; cursor: pointer; transition: all 0.2s;" onclick="viewGroup('<%= group.id %>')">
                                                    <i class="fas fa-eye"></i> View
                                                </button>
                                                <button style="padding: 0.375rem 0.75rem; font-size: 0.8125rem; background: transparent; border: 1px solid #e2e8f0; color: #64748b; border-radius: 8px; cursor: pointer; transition: all 0.2s;" onclick="removeGroup('<%= group.id %>')">
                                                    <i class="fas fa-trash"></i> Remove
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="6" style="padding: 3rem 1.5rem; text-align: center; color: #64748b;">
                                        <div>
                                            <i class="fas fa-comments" style="font-size: 3rem; margin-bottom: 1rem; color: #94a3b8;"></i>
                                            <h5>No Groups Found</h5>
                                            <p>Get started by adding your first group.</p>
                                            <button class="btn btn-primary" id="addFirstGroupBtn"><i class="fas fa-plus"></i> Add Group</button>
                                        </div>
                                    </td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Group Modal -->
    <div class="modal-overlay" id="addGroupModal">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New WhatsApp Group</h5>
                <button type="button" class="close-modal" id="closeAddGroupModal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="addGroupForm">
                    <input type="hidden" name="user_id" value="<%= userId %>">
                    <div class="form-group mb-3">
                        <label for="businessSelect" class="form-label">Business *</label>
                        <select class="form-select" id="businessSelect" name="business_id" required onchange="updateGroupTypeOptions()">
                             <option value="" disabled selected>Select a business</option>
                             <% businesses.forEach(business => { %>
                                <% 
                                    const businessGroups = groups.filter(g => g.business_id === business.business_id);
                                    const hasSales = businessGroups.some(g => g.group_type === 'sales');
                                    const hasDelivery = businessGroups.some(g => g.group_type === 'delivery');
                                    const isAtLimit = hasSales && hasDelivery;
                                %>
                                <option value="<%= business.business_id %>" data-has-sales="<%= hasSales %>" data-has-delivery="<%= hasDelivery %>" <%= isAtLimit ? 'disabled' : '' %>>
                                    <%= business.business_name %>
                                    <% if (isAtLimit) { %> (Has both groups) <% } else if (hasSales || hasDelivery) { %>
                                        (<%= hasSales ? 'Has sales' : '' %><%= hasSales && hasDelivery ? ', ' : '' %><%= hasDelivery ? 'Has delivery' : '' %>)
                                    <% } %>
                                </option>
                            <% }); %>
                        </select>
                    </div>
                     <div class="form-group mb-3">
                        <label for="groupType" class="form-label">Group Type *</label>
                        <select class="form-select" id="groupType" name="group_type" required>
                            <option value="" disabled selected>Select group type</option>
                            <option value="sales">Sales Group</option>
                            <option value="delivery">Delivery Group</option>
                        </select>
                    </div>
                    <div class="form-group mb-3">
                        <label for="groupName" class="form-label">Group Name *</label>
                        <input type="text" class="form-input" id="groupName" name="group_name" required>
                    </div>
                    <div class="form-group mb-3">
                        <label for="groupId" class="form-label">Group ID *</label>
                        <input type="text" class="form-input" id="groupId" name="group_id" required placeholder="e.g., 12036302...-1619...@g.us">
                    </div>
                    
                    <!-- Setup Instructions -->
                    <div class="content-card" style="margin: 1rem 0; background: rgba(59, 130, 246, 0.05);">
                        <div class="card-content">
                            <h6><i class="fas fa-info-circle"></i> Setup Instructions</h6>
                            <ol style="margin: 0.5rem 0; padding-left: 1.5rem;">
                                <li class="mb-2">
                                    <strong>Add Our Bot to Your Group</strong><br>
                                    <small>Add this WhatsApp number to your group as an admin:</small><br>
                                    <div style="background: var(--surface-color); padding: 0.5rem; border-radius: var(--radius); margin: 0.5rem 0;">
                                        <strong>Bot Number:</strong> <code id="botNumber">Loading...</code>
                                        <button type="button" class="btn btn-sm btn-outline" onclick="copyBotNumber()" style="float: right;">Copy</button>
                                    </div>
                                </li>
                                <li class="mb-2">
                                    <strong>Run the Setup Command</strong><br>
                                    <small>In your WhatsApp group, type this command:</small><br>
                                    <div style="background: var(--surface-color); padding: 0.5rem; border-radius: var(--radius); margin: 0.5rem 0;">
                                        <code>/setup YOUR-BUSINESS-CODE</code>
                                        <button type="button" class="btn btn-sm btn-outline" onclick="copySetupCommand()" style="float: right;">Copy</button>
                                    </div>
                                </li>
                                <li class="mb-2">
                                    <strong>Choose Group Type</strong><br>
                                    <small>The bot will ask if this is a "sales" or "delivery" group.</small>
                                </li>
                                <li class="mb-2">
                                    <strong>Get Group ID</strong><br>
                                    <small>After setup, the bot will provide a Group ID. Copy it and enter it above.</small>
                                </li>
                            </ol>
                        </div>
                    </div>
                    
                    <button type="submit" class="btn btn-primary w-100">Add Group</button>
                </form>
            </div>
        </div>
    </div>

    <!-- Group Details Modal -->
    <div class="modal-overlay" id="groupDetailsModal">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Group Details</h5>
                <button type="button" class="close-modal" id="closeGroupDetailsModal">&times;</button>
            </div>
            <div class="modal-body" id="groupDetailsContent">
                Loading...
            </div>
        </div>
    </div>

    <!-- Setup Instructions Modal -->
    <div class="modal-overlay" id="setupInstructionsModal">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Setup Instructions</h5>
                <button type="button" class="close-modal" id="closeSetupInstructionsModal">&times;</button>
            </div>
            <div class="modal-body" id="setupInstructionsContent">
                Loading...
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Theme toggle
            const themeToggle = document.getElementById('theme-toggle');
            const html = document.documentElement;
            const sunIcon = themeToggle.querySelector('.fa-sun');
            const moonIcon = themeToggle.querySelector('.fa-moon');

            function applyTheme(theme) {
                html.setAttribute('data-theme', theme);
                if (theme === 'dark') {
                    sunIcon.style.display = 'none';
                    moonIcon.style.display = 'inline-block';
                } else {
                    sunIcon.style.display = 'inline-block';
                    moonIcon.style.display = 'none';
                }
            }

            const savedTheme = localStorage.getItem('theme') || 'light';
            applyTheme(savedTheme);

            themeToggle.addEventListener('click', () => {
                const newTheme = html.getAttribute('data-theme') === 'light' ? 'dark' : 'light';
                localStorage.setItem('theme', newTheme);
                applyTheme(newTheme);
            });

            // Dropdown
             function setupDropdown(buttonId, menuId) {
                const dropdownBtn = document.getElementById(buttonId);
                const dropdownMenu = document.getElementById(menuId);

                if (dropdownBtn && dropdownMenu) {
                    dropdownBtn.addEventListener('click', (event) => {
                        event.stopPropagation();
                        document.querySelectorAll('.dropdown-content.show').forEach(menu => {
                            if (menu.id !== menuId) menu.classList.remove('show');
                        });
                        dropdownMenu.classList.toggle('show');
                    });
                }
            }
            setupDropdown('profileDropdown', 'profileMenu');
            window.addEventListener('click', () => document.querySelectorAll('.dropdown-content.show').forEach(m => m.classList.remove('show')));

            // Modal
            const modal = document.getElementById('addGroupModal');
            const openModalBtn = document.getElementById('openAddGroupModal');
            const closeModalBtn = document.getElementById('closeAddGroupModal');
            const addFirstGroupBtn = document.getElementById('addFirstGroupBtn');
            
            function showModal() { modal.classList.add('show'); }
            function hideModal() { modal.classList.remove('show'); }

            if(openModalBtn) openModalBtn.addEventListener('click', showModal);
            if(addFirstGroupBtn) addFirstGroupBtn.addEventListener('click', showModal);
            if(closeModalBtn) closeModalBtn.addEventListener('click', hideModal);
            modal.addEventListener('click', (e) => {
                if (e.target === modal) hideModal();
            });

            // Filtering
            const businessFilter = document.getElementById('businessFilter');
            const typeFilter = document.getElementById('typeFilter');
            const groupsTable = document.getElementById('groupsTable').getElementsByTagName('tbody')[0];

            function filterGroups() {
                const businessValue = businessFilter.value;
                const typeValue = typeFilter.value;
                for (let row of groupsTable.rows) {
                    const rowBusiness = row.getAttribute('data-business');
                    const rowType = row.getAttribute('data-type');
                    const businessMatch = !businessValue || rowBusiness === businessValue;
                    const typeMatch = !typeValue || rowType === typeValue;
                    row.style.display = businessMatch && typeMatch ? '' : 'none';
                }
            }
            if(businessFilter) businessFilter.addEventListener('change', filterGroups);
            if(typeFilter) typeFilter.addEventListener('change', filterGroups);
            
            // Add Group Form Submission
            const addGroupForm = document.getElementById('addGroupForm');
            addGroupForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(addGroupForm);
                const data = Object.fromEntries(formData.entries());
                
                try {
                    const response = await fetch('/api/groups', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });
                    const result = await response.json();
                    if(response.ok) {
                        window.location.reload();
                    } else {
                        alert('Error: ' + result.error);
                    }
                } catch (error) {
                    alert('An unexpected error occurred.');
                }
            });

            // Remove Group
            window.removeGroup = async (groupId) => {
                if(confirm('Are you sure you want to remove this group?')) {
                    try {
                         const response = await fetch(`/api/groups/${groupId}?userId=<%= userId %>`, {
                            method: 'DELETE'
                        });
                        const result = await response.json();
                        if(response.ok) {
                            window.location.reload();
                        } else {
                            alert('Error: ' + result.error);
                        }
                    } catch(error) {
                         alert('An unexpected error occurred.');
                    }
                }
            }

            // View Group Details
            window.viewGroup = async (groupId) => {
                try {
                    const response = await fetch(`/api/groups/${groupId}?userId=<%= userId %>`);
                    const group = await response.json();
                    
                    if (response.ok) {
                        const content = document.getElementById('groupDetailsContent');
                        content.innerHTML = `
                            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem;">
                                <div>
                                    <h6>Group Information</h6>
                                    <div style="background: var(--surface-color); padding: 1rem; border-radius: var(--radius);">
                                        <p><strong>Group Name:</strong> ${group.group_name}</p>
                                        <p><strong>Group ID:</strong> <code>${group.group_id}</code></p>
                                        <p><strong>Type:</strong> <span class="group-type-badge ${group.group_type}">${group.group_type}</span></p>
                                        <p><strong>Business:</strong> ${group.business_name}</p>
                                        <p><strong>Created:</strong> ${new Date(group.created_at).toLocaleString()}</p>
                                    </div>
                                </div>
                                <div>
                                    <h6>Group Statistics</h6>
                                    <div style="background: var(--surface-color); padding: 1rem; border-radius: var(--radius);">
                                        <div style="text-align: center; margin-bottom: 1rem;">
                                            <h3 style="color: var(--primary-color);">${group.orderCount || 0}</h3>
                                            <p>Total Orders</p>
                                        </div>
                                        <div style="text-align: center;">
                                            <h3 style="color: var(--warning-color);">${group.pendingOrders || 0}</h3>
                                            <p>Pending Orders</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div style="margin-top: 1rem;">
                                <h6>Recent Activity</h6>
                                <div style="background: rgba(59, 130, 246, 0.05); padding: 1rem; border-radius: var(--radius);">
                                    <i class="fas fa-info-circle"></i>
                                    Activity tracking will be available soon.
                                </div>
                            </div>
                        `;
                        
                        const modal = document.getElementById('groupDetailsModal');
                        modal.classList.add('show');
                    } else {
                        alert('Failed to load group details: ' + group.error);
                    }
                } catch (error) {
                    alert('Error loading group details: ' + error.message);
                }
            }

            // Update Group Type Options
            window.updateGroupTypeOptions = function() {
                const businessSelect = document.getElementById('businessSelect');
                const groupTypeSelect = document.getElementById('groupType');
                const selectedOption = businessSelect.options[businessSelect.selectedIndex];
                
                if (!selectedOption || !selectedOption.value) {
                    groupTypeSelect.innerHTML = '<option value="" disabled selected>Select group type</option><option value="sales">Sales Group</option><option value="delivery">Delivery Group</option>';
                    return;
                }
                
                const hasSales = selectedOption.getAttribute('data-has-sales') === 'true';
                const hasDelivery = selectedOption.getAttribute('data-has-delivery') === 'true';
                
                groupTypeSelect.innerHTML = '<option value="" disabled selected>Select group type</option>';
                
                if (!hasSales) {
                    groupTypeSelect.innerHTML += '<option value="sales">Sales Group</option>';
                }
                if (!hasDelivery) {
                    groupTypeSelect.innerHTML += '<option value="delivery">Delivery Group</option>';
                }
                
                if (hasSales && hasDelivery) {
                    groupTypeSelect.innerHTML = '<option value="" disabled>This business already has both groups</option>';
                }
            }

            // Copy Bot Number
            window.copyBotNumber = function() {
                const botNumber = document.querySelector('#botNumber').textContent;
                if (botNumber === 'Loading...' || botNumber === 'Not available' || botNumber === 'Error loading') {
                    alert('Bot number not available yet. Please try again in a moment.');
                    return;
                }
                navigator.clipboard.writeText(botNumber).then(() => {
                    const button = event.target;
                    button.textContent = 'Copied!';
                    setTimeout(() => {
                        button.textContent = 'Copy';
                    }, 2000);
                });
            }

            // Copy Setup Command
            window.copySetupCommand = function() {
                const command = document.querySelector('code').textContent;
                navigator.clipboard.writeText(command).then(() => {
                    const button = event.target;
                    button.textContent = 'Copied!';
                    setTimeout(() => {
                        button.textContent = 'Copy';
                    }, 2000);
                });
            }

            // Additional Modal Controls
            const groupDetailsModal = document.getElementById('groupDetailsModal');
            const setupInstructionsModal = document.getElementById('setupInstructionsModal');
            const closeGroupDetailsModal = document.getElementById('closeGroupDetailsModal');
            const closeSetupInstructionsModal = document.getElementById('closeSetupInstructionsModal');

            function hideGroupDetailsModal() { groupDetailsModal.classList.remove('show'); }
            function hideSetupInstructionsModal() { setupInstructionsModal.classList.remove('show'); }

            if(closeGroupDetailsModal) closeGroupDetailsModal.addEventListener('click', hideGroupDetailsModal);
            if(closeSetupInstructionsModal) closeSetupInstructionsModal.addEventListener('click', hideSetupInstructionsModal);
            
            groupDetailsModal.addEventListener('click', (e) => {
                if (e.target === groupDetailsModal) hideGroupDetailsModal();
            });
            setupInstructionsModal.addEventListener('click', (e) => {
                if (e.target === setupInstructionsModal) hideSetupInstructionsModal();
            });

            // Load bot number when page loads
            async function loadBotInfo() {
                try {
                    const response = await fetch('/api/whatsapp/bot-info');
                    const botInfo = await response.json();
                    
                    if (botInfo.success) {
                        document.getElementById('botNumber').textContent = botInfo.number;
                    } else {
                        document.getElementById('botNumber').textContent = 'Not available';
                    }
                } catch (error) {
                    console.error('Error loading bot info:', error);
                    document.getElementById('botNumber').textContent = 'Error loading';
                }
            }
            loadBotInfo();
        });
    </script>
</body>
</html> 