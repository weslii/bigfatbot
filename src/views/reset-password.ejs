<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - Novi</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="stylesheet" href="/css/theme.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            margin: 0;
            padding: 0;
            min-height: 100vh;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .reset-container {
            background: var(--bg-primary);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            padding: 3rem;
            width: 100%;
            max-width: 450px;
            margin: 2rem;
            border: 1px solid var(--border-color);
        }

        .reset-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .reset-header h1 {
            color: var(--text-primary);
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .reset-header p {
            color: var(--text-secondary);
            font-size: 1rem;
            margin: 0;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            color: var(--text-primary);
            font-weight: 600;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid var(--border-color);
            border-radius: 10px;
            font-size: 1rem;
            background: var(--bg-secondary);
            color: var(--text-primary);
            transition: all 0.3s ease;
            box-sizing: border-box;
        }

        .form-control:focus {
            outline: none;
            border-color: #10b981;
            box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
        }

        .password-toggle {
            position: relative;
        }

        .password-toggle .form-control {
            padding-right: 3rem;
        }

        .toggle-password {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--text-secondary);
            cursor: pointer;
            font-size: 1.1rem;
            padding: 0.25rem;
        }

        .toggle-password:hover {
            color: var(--text-primary);
        }

        .reset-btn {
            width: 100%;
            padding: 0.875rem 1.5rem;
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .reset-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(16, 185, 129, 0.3);
        }

        .reset-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }

        .back-link {
            text-align: center;
            margin-top: 1.5rem;
        }

        .back-link a {
            color: #10b981;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .back-link a:hover {
            color: #059669;
        }

        .error-message {
            background: #fee2e2;
            border: 1px solid #fecaca;
            color: #dc2626;
            padding: 0.75rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            font-size: 0.9rem;
        }

        .success-message {
            background: #d1fae5;
            border: 1px solid #a7f3d0;
            color: #065f46;
            padding: 0.75rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            font-size: 0.9rem;
            text-align: center;
        }

        .password-strength {
            margin-top: 0.5rem;
            font-size: 0.8rem;
        }

        .strength-bar {
            height: 4px;
            background: #e5e7eb;
            border-radius: 2px;
            overflow: hidden;
            margin-top: 0.25rem;
        }

        .strength-fill {
            height: 100%;
            transition: all 0.3s ease;
            border-radius: 2px;
        }

        .strength-weak { background: #ef4444; width: 25%; }
        .strength-fair { background: #f59e0b; width: 50%; }
        .strength-good { background: #10b981; width: 75%; }
        .strength-strong { background: #059669; width: 100%; }

        @media (max-width: 480px) {
            .reset-container {
                margin: 1rem;
                padding: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="reset-container">
        <div class="reset-header">
            <h1>Reset Password</h1>
            <p>Enter your new password below</p>
        </div>

        <% if (error) { %>
            <div class="error-message">
                <i class="fas fa-exclamation-circle"></i>
                <%= error %>
            </div>
        <% } %>

        <% if (success) { %>
            <div class="success-message">
                <i class="fas fa-check-circle"></i>
                <%= success %>
            </div>
        <% } %>

        <form id="resetPasswordForm" onsubmit="submitResetPassword(event)">
            <div class="form-group">
                <label for="password" class="form-label">New Password</label>
                <div class="password-toggle">
                    <input type="password" class="form-control" id="password" name="password" required 
                           placeholder="Enter your new password" minlength="8">
                    <button type="button" class="toggle-password" onclick="togglePassword('password')">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>
                <div class="password-strength">
                    <span id="strength-text">Password strength: </span>
                    <div class="strength-bar">
                        <div class="strength-fill" id="strength-fill"></div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label for="confirmPassword" class="form-label">Confirm New Password</label>
                <div class="password-toggle">
                    <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required 
                           placeholder="Confirm your new password" minlength="8">
                    <button type="button" class="toggle-password" onclick="togglePassword('confirmPassword')">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>
            </div>

            <button type="submit" class="reset-btn" id="resetBtn">
                <i class="fas fa-key"></i>
                Reset Password
            </button>
        </form>

        <div class="back-link">
            <a href="/login">
                <i class="fas fa-arrow-left"></i>
                Back to Login
            </a>
        </div>
    </div>

    <script>
        // Password strength checker
        function checkPasswordStrength(password) {
            let strength = 0;
            let feedback = [];

            if (password.length >= 8) strength += 1;
            else feedback.push('At least 8 characters');

            if (/[a-z]/.test(password)) strength += 1;
            else feedback.push('Lowercase letter');

            if (/[A-Z]/.test(password)) strength += 1;
            else feedback.push('Uppercase letter');

            if (/[0-9]/.test(password)) strength += 1;
            else feedback.push('Number');

            if (/[^A-Za-z0-9]/.test(password)) strength += 1;
            else feedback.push('Special character');

            const strengthTexts = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
            const strengthClasses = ['strength-weak', 'strength-fair', 'strength-good', 'strength-strong'];

            return {
                score: strength,
                text: strengthTexts[strength - 1] || 'Very Weak',
                class: strengthClasses[strength - 1] || 'strength-weak',
                feedback: feedback
            };
        }

        // Update password strength display
        document.getElementById('password').addEventListener('input', function() {
            const password = this.value;
            const strength = checkPasswordStrength(password);
            
            document.getElementById('strength-text').textContent = `Password strength: ${strength.text}`;
            const fill = document.getElementById('strength-fill');
            fill.className = `strength-fill ${strength.class}`;
        });

        // Toggle password visibility
        function togglePassword(fieldId) {
            const field = document.getElementById(fieldId);
            const button = field.nextElementSibling;
            const icon = button.querySelector('i');

            if (field.type === 'password') {
                field.type = 'text';
                icon.className = 'fas fa-eye-slash';
            } else {
                field.type = 'password';
                icon.className = 'fas fa-eye';
            }
        }

        // Submit reset password form
        async function submitResetPassword(event) {
            event.preventDefault();
            
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const resetBtn = document.getElementById('resetBtn');
            const originalText = resetBtn.innerHTML;
            
            // Validate passwords match
            if (password !== confirmPassword) {
                alert('Passwords do not match. Please try again.');
                return;
            }
            
            // Validate password strength
            const strength = checkPasswordStrength(password);
            if (strength.score < 3) {
                alert('Password is too weak. Please use a stronger password.');
                return;
            }
            
            try {
                // Show loading state
                resetBtn.disabled = true;
                resetBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Resetting...';
                
                const response = await fetch('/auth/reset-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        token: '<%= token %>',
                        password: password
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert('Password reset successfully! You can now login with your new password.');
                    window.location.href = '/login';
                } else {
                    alert('Error: ' + (result.message || 'Failed to reset password'));
                }
            } catch (error) {
                console.error('Reset password error:', error);
                alert('Error: Failed to reset password. Please try again.');
            } finally {
                // Restore button state
                resetBtn.disabled = false;
                resetBtn.innerHTML = originalText;
            }
        }
    </script>
</body>
</html> 